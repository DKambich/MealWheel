{"version":3,"sources":["constants.ts","components/Navbar.tsx","pages/Home.tsx","components/Wheel.tsx","components/WinnerModal.tsx","pages/DineIn.tsx","pages/CarryOut.tsx","App.tsx","index.tsx"],"names":["restaurants","routes","getWheelData","type","filter","entry","map","restaurant","fillStyle","bgColor","text","name","textFillStyle","fontColor","textFontSize","length","lineWidth","textOrientation","data","window","Winwheel","DEFAULT_WHEEL","canvasId","numSegments","DEFAULT_RESTAURANT","cuisine","logo","location","Navbar","props","bg","variant","expand","to","NavbarBrand","Image","src","width","height","className","alt","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","Link","active","activeTab","Home","Container","Jumbotron","Wheel","state","spinning","wheel","onSpinEnd","selectedSegment","resetWheel","draw","drawColourTriangle","spinWheel","animation","spins","Math","random","setState","startAnimation","stopAnimation","rotationAngle","ctx","canvas","getContext","scaleFactor","strokeStyle","beginPath","moveTo","lineTo","stroke","fill","responsive","drawText","this","segments","pins","callbackFinished","callbackAfter","clearTheCanvas","setTimeout","size","min","innerWidth","innerHeight","Col","Row","noGutters","data-responsiveScaleHeight","Button","disabled","onClick","Component","WinnerModal","onHide","show","winner","query","replace","Modal","aria-labelledby","centered","ModalHeader","closeButton","ModalTitle","ModalBody","rounded","target","rel","href","DineIn","React","useState","modalShow","setModalShow","setWinner","segment","CarryOut","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bca6ff6.chunk.js","sourcesContent":["import restaurantJSON from \"./data/restaurants.json\";\r\n\r\nexport const restaurants: Restaurant[] = restaurantJSON;\r\n\r\nexport const routes = {\r\n  HOME: \"home\",\r\n  CARRY_OUT: \"carryout\",\r\n  DINE_IN: \"dinein\",\r\n};\r\n\r\nexport type FixMeLater = any;\r\n\r\nexport type Restaurant = {\r\n  name: string;\r\n  type: string;\r\n  cuisine: string;\r\n  bgColor: string;\r\n  fontColor: string;\r\n  logo: string;\r\n  location: string;\r\n};\r\n\r\nexport type WheelSegment = {\r\n  fillStyle: string;\r\n  text: string;\r\n  textFillStyle: string;\r\n  textFontSize: number;\r\n  lineWidth: number;\r\n  textOrientation: string;\r\n  data: Restaurant;\r\n};\r\n\r\nexport type WinWheel = {\r\n  animation: any;\r\n  canvas: any;\r\n  rotationAngle: number;\r\n  scaleFactor: number;\r\n  draw: (clearTheCanvas?: boolean) => void;\r\n  startAnimation: () => void;\r\n  stopAnimation: (canCallback?: boolean) => void;\r\n};\r\n\r\nexport function getFontSize(text: string) {\r\n  if (text.length < 10) return 22;\r\n  if (text.length < 15) return 20;\r\n  if (text.length < 20) return 18;\r\n  return 16;\r\n}\r\n\r\nexport function getWheelData(type?: string): WheelSegment[] {\r\n  return restaurants\r\n    .filter((entry: Restaurant) => (!type ? true : entry.type === type))\r\n    .map((restaurant) => ({\r\n      fillStyle: restaurant.bgColor,\r\n      text: restaurant.name,\r\n      textFillStyle: restaurant.fontColor,\r\n      textFontSize: getFontSize(restaurant.name),\r\n      lineWidth: 2,\r\n      textOrientation: \"horizontal\",\r\n      data: restaurant,\r\n    }));\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    Winwheel: any;\r\n  }\r\n}\r\n\r\nwindow.Winwheel = window.Winwheel || {};\r\n\r\nexport const DEFAULT_WHEEL: WinWheel = new window.Winwheel({\r\n  canvasId: \"dummyCanvas\",\r\n  numSegments: 0,\r\n});\r\n\r\nexport const DEFAULT_RESTAURANT: Restaurant = {\r\n  name: \"\",\r\n  type: \"\",\r\n  cuisine: \"\",\r\n  bgColor: \"\",\r\n  fontColor: \"\",\r\n  logo: \"\",\r\n  location: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { Navbar as BSNavbar, Nav, NavbarBrand, Image } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\r\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\r\nimport { routes } from \"../constants\";\r\n\r\ntype NavbarProps = {\r\n  activeTab?: string;\r\n};\r\nexport default function Navbar(props: NavbarProps) {\r\n  return (\r\n    <BSNavbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <LinkContainer to=\"home\">\r\n        <NavbarBrand>\r\n          <Image\r\n            src=\"./logo.png\"\r\n            width={32}\r\n            height={32}\r\n            className=\"align-top mr-2\"\r\n            alt=\"Meal Wheel logo\"\r\n          />\r\n          Meal Wheel\r\n        </NavbarBrand>\r\n      </LinkContainer>\r\n      <NavbarToggle aria-controls=\"basic-navbar-nav\" />\r\n      <NavbarCollapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to={routes.HOME}>\r\n            <Nav.Link active={props.activeTab === routes.HOME}>Home</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to={routes.DINE_IN}>\r\n            <Nav.Link active={props.activeTab === routes.DINE_IN}>\r\n              Dine In\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to={routes.CARRY_OUT}>\r\n            <Nav.Link active={props.activeTab === routes.CARRY_OUT}>\r\n              Carry Out\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </NavbarCollapse>\r\n    </BSNavbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Container, Jumbotron } from \"react-bootstrap\";\r\nimport { routes } from \"../constants\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <>\r\n      <Navbar activeTab={routes.HOME} />\r\n      <Container>\r\n        <Jumbotron className=\"my-4\">\r\n          <h1 className=\"display-4\">Welcome to Meal Wheel!</h1>\r\n          <p className=\"lead\">\r\n            Ever have disagreements about where to eat or just simply can't\r\n            decide what sounds good? Then Meal Wheel is the site for you. Meal\r\n            Wheel compiles some of Lafayette's and West Lafayette's best\r\n            restaurants. Meal Wheel also partitions the restaurants by cuisine,\r\n            allowing for finer control of options. As of now, Meal Wheel only\r\n            supports restaurants in our immeadiate vicininty in Indiana.\r\n          </p>\r\n          <hr className=\"my-4\" />\r\n          <p>\r\n            Note that this site is just a fun side project. It is not intended\r\n            to promote any restaurants included, just a compilation of some of\r\n            our favorites.\r\n          </p>\r\n        </Jumbotron>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Button } from \"react-bootstrap\";\r\nimport { DEFAULT_WHEEL, WheelSegment, WinWheel } from \"../constants\";\r\n\r\ntype WheelProps = {\r\n  onSpinEnd: (segment: WheelSegment) => void;\r\n  segments: WheelSegment[];\r\n};\r\n\r\ntype WheelState = {\r\n  wheel: WinWheel;\r\n  spinning: boolean;\r\n};\r\nexport class Wheel extends Component<WheelProps, WheelState> {\r\n  state = {\r\n    spinning: false,\r\n    wheel: DEFAULT_WHEEL,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const wheel = new window.Winwheel({\r\n      canvasId: \"wheelCanvas\",\r\n      responsive: true,\r\n      drawText: true,\r\n      numSegments: this.props.segments.length,\r\n      segments: this.props.segments,\r\n      pins: true,\r\n      animation: {\r\n        type: \"spinToStop\",\r\n        callbackFinished: this.onSpinEnd,\r\n        callbackAfter: this.drawColourTriangle,\r\n      },\r\n      clearTheCanvas: false,\r\n    });\r\n\r\n    this.setState({ wheel }, () => {\r\n      this.state.wheel.draw();\r\n      setTimeout(this.drawColourTriangle, 1);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.wheel.stopAnimation(false);\r\n  }\r\n\r\n  onSpinEnd = (selectedSegment: WheelSegment) => {\r\n    if (this.props.onSpinEnd) this.props.onSpinEnd(selectedSegment);\r\n    this.resetWheel();\r\n    this.state.wheel?.draw();\r\n    this.drawColourTriangle();\r\n  };\r\n\r\n  spinWheel = () => {\r\n    let wheel = this.state.wheel;\r\n    wheel.animation.spins = 8 + 1 * Math.random();\r\n\r\n    this.setState({ wheel, spinning: true }, () =>\r\n      this.state.wheel.startAnimation()\r\n    );\r\n  };\r\n\r\n  resetWheel = () => {\r\n    this.state.wheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\r\n    let wheel = this.state.wheel;\r\n    wheel.rotationAngle = wheel.rotationAngle % 360; // Re-set the wheel angle to 0 degrees.\r\n    this.setState({ wheel, spinning: false }, () => {\r\n      this.state.wheel.draw();\r\n      this.drawColourTriangle();\r\n    });\r\n  };\r\n\r\n  drawColourTriangle = () => {\r\n    // Get context used by the wheel.\r\n    // let ctx = this.state.wheel.ctx;\r\n    let ctx = this.state.wheel.canvas.getContext(\"2d\");\r\n    let scaleFactor = this.state.wheel.scaleFactor;\r\n\r\n    ctx.strokeStyle = \"black\"; // Set line colour.\r\n    ctx.fillStyle = \"red\"; // Set fill colour.\r\n    ctx.lineWidth = 3;\r\n    let width = ctx.canvas.width / 2;\r\n    let height = (ctx.canvas.height * 0.05) / 2;\r\n    ctx.beginPath(); // Begin path.\r\n    ctx.moveTo(width - height * scaleFactor * 0.25, 1); // Move to initial position.\r\n    ctx.lineTo(width + height * scaleFactor * 0.25, 1); // Draw lines to make the shape.\r\n    ctx.lineTo(width, height * scaleFactor);\r\n    ctx.lineTo(width - height * scaleFactor * 0.25, 1);\r\n    ctx.stroke(); // Complete the path by stroking (draw lines).\r\n    ctx.fill(); // Then fill.\r\n  };\r\n\r\n  render() {\r\n    if (this.state.wheel) this.drawColourTriangle();\r\n    let size = Math.min(window.innerWidth * 0.98, window.innerHeight, 500);\r\n    return (\r\n      <Col>\r\n        <Row className=\"justify-content-center py-4\" noGutters>\r\n          <canvas\r\n            id=\"wheelCanvas\"\r\n            data-responsiveScaleHeight=\"true\" /* Optional Parameters */\r\n            width={size}\r\n            height={size}\r\n          />\r\n        </Row>\r\n        <Row className=\"justify-content-around\">\r\n          <Button disabled={this.state.spinning} onClick={this.spinWheel}>\r\n            Spin Me\r\n          </Button>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ModalTitle,\r\n  ModalBody,\r\n  Col,\r\n  Container,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport { Restaurant } from \"../constants\";\r\n\r\ntype WinnerModalProps = {\r\n  onHide: () => void;\r\n  show: boolean;\r\n  winner: Restaurant | null;\r\n};\r\nexport default function WinnerModal({\r\n  onHide,\r\n  show,\r\n  winner,\r\n}: WinnerModalProps) {\r\n  if (!winner) return null;\r\n  let link = \"https://www.google.com/maps/dir/?api=1&\";\r\n  let query = `travelmode=driving&destination=${winner.location\r\n    .replace(\" \", \"+\")\r\n    .replace(\",\", \"%2C\")}`;\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      size=\"lg\"\r\n      onHide={onHide}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <ModalHeader closeButton onHide={onHide}>\r\n        <ModalTitle id=\"contained-modal-title-vcenter\">\r\n          {winner.name} was Picked!\r\n        </ModalTitle>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Container>\r\n          <Col className=\"justify-content-end text-center\">\r\n            <Image\r\n              src=\"https://via.placeholder.com/350\"\r\n              rounded\r\n              className=\"img-fluid img-thumbnail\"\r\n            />\r\n            <h1 className=\"py-4\">{winner.name}</h1>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={link + query}>\r\n              <Button>Get Directions</Button>\r\n            </a>\r\n          </Col>\r\n        </Container>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Wheel } from \"../components/Wheel\";\r\nimport WinnerModal from \"../components/WinnerModal\";\r\nimport {\r\n  getWheelData,\r\n  WheelSegment,\r\n  Restaurant,\r\n  DEFAULT_RESTAURANT,\r\n  routes,\r\n} from \"../constants\";\r\nimport { Jumbotron, Container } from \"react-bootstrap\";\r\n\r\nexport default function DineIn() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [winner, setWinner] = React.useState<Restaurant>(DEFAULT_RESTAURANT);\r\n  const segments = getWheelData(\"dine_in\");\r\n\r\n  return (\r\n    <>\r\n      <Navbar activeTab={routes.DINE_IN} />\r\n      {segments.length > 0 && (\r\n        <Wheel\r\n          segments={segments}\r\n          onSpinEnd={(segment: WheelSegment) => {\r\n            setWinner(segment.data);\r\n            setModalShow(true);\r\n          }}\r\n        />\r\n      )}\r\n      {segments.length === 0 && (\r\n        <Container>\r\n          <Jumbotron className=\"my-4\">\r\n            <h1 className=\"display-4\">Oops No Data Available!</h1>\r\n            <p className=\"lead\">\r\n              Sorry no data on Dine In restaurants has been collected yet. Try\r\n              again later!\r\n            </p>\r\n          </Jumbotron>\r\n        </Container>\r\n      )}\r\n      <WinnerModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        winner={winner}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Wheel } from \"../components/Wheel\";\r\nimport WinnerModal from \"../components/WinnerModal\";\r\nimport {\r\n  WheelSegment,\r\n  getWheelData,\r\n  Restaurant,\r\n  DEFAULT_RESTAURANT,\r\n  routes,\r\n} from \"../constants\";\r\nimport { Container, Jumbotron } from \"react-bootstrap\";\r\n\r\nexport default function CarryOut() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [winner, setWinner] = React.useState<Restaurant>(DEFAULT_RESTAURANT);\r\n  const segments = getWheelData(\"take_out\");\r\n\r\n  return (\r\n    <>\r\n      <Navbar activeTab={routes.CARRY_OUT} />\r\n      {segments.length > 0 && (\r\n        <Wheel\r\n          segments={segments}\r\n          onSpinEnd={(segment: WheelSegment) => {\r\n            setWinner(segment.data);\r\n            setModalShow(true);\r\n          }}\r\n        />\r\n      )}\r\n      {segments.length === 0 && (\r\n        <Container>\r\n          <Jumbotron className=\"my-4\">\r\n            <h1 className=\"display-4\">Oops No Data Available!</h1>\r\n            <p className=\"lead\">\r\n              Sorry no data on Carry Out restaurants has been collected yet. Try\r\n              again later!\r\n            </p>\r\n          </Jumbotron>\r\n        </Container>\r\n      )}\r\n      <WinnerModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        winner={winner}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport DineIn from \"./pages/DineIn\";\nimport CarryOut from \"./pages/CarryOut\";\nimport { routes } from \"./constants\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={`/MealWheel/${routes.HOME}`} component={Home} />\n        <Route path={`/MealWheel/${routes.DINE_IN}`} component={DineIn} />\n        <Route path={`/MealWheel/${routes.CARRY_OUT}`} component={CarryOut} />\n        <Redirect from=\"/\" to={`/MealWheel/${routes.HOME}`} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}