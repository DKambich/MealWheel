{"version":3,"sources":["components/Navbar.js","components/WinnerModal.js","components/Wheel.js","pages/Home.js","pages/DineIn.js","pages/CarryOut.js","App.js","index.js"],"names":["Navbar","bg","variant","expand","to","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","className","Link","WinnerModal","props","Modal","show","size","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","winner","toString","Footer","Button","onClick","Wheel","state","wheel","spinning","width","height","onSpinEnd","selectedSegment","resetWheel","drawColourTriangle","spinWheel","animation","spins","Math","random","setState","startAnimation","stopAnimation","rotationAngle","draw","ctx","strokeStyle","fillStyle","lineWidth","canvas","beginPath","moveTo","lineTo","stroke","fill","updateWindowDimensions","dimen","min","window","innerWidth","innerHeight","setTimeout","segments","this","addEventListener","Winwheel","canvasId","responsive","drawText","numSegments","length","type","callbackFinished","callbackAfter","removeEventListener","Container","Col","Row","disabled","Component","getRandomColor","color","i","floor","Home","numEntries","React","useState","modalShow","setModalShow","setWinner","fluid","Array","map","val","index","text","textOrientation","segment","DineIn","CarryOut","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"+OAMe,SAASA,IACtB,OACE,kBAAC,IAAD,CAAUC,GAAG,UAAUC,QAAQ,OAAOC,OAAO,MAC3C,kBAAC,gBAAD,CAAeC,GAAG,QAChB,kBAACC,EAAA,EAAD,mBAEF,kBAACC,EAAA,EAAD,CAAcC,gBAAc,qBAC5B,kBAACC,EAAA,EAAD,CAAgBC,GAAG,oBACjB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAAC,gBAAD,CAAeP,GAAG,UAChB,kBAACM,EAAA,EAAIE,KAAL,iBAEF,kBAAC,gBAAD,CAAeR,GAAG,YAChB,kBAACM,EAAA,EAAIE,KAAL,sB,4CChBG,SAASC,EAAYC,GAClC,OACE,kBAACC,EAAA,EAAD,CACEC,KAAMF,EAAME,KACZC,KAAK,KACLC,OAAQJ,EAAMI,OACdC,kBAAgB,gCAChBC,UAAQ,GAER,kBAACL,EAAA,EAAMM,OAAP,CAAcC,aAAW,EAACJ,OAAQJ,EAAMI,QACtC,kBAACH,EAAA,EAAMQ,MAAP,CAAad,GAAG,iCAAhB,kBAIF,kBAACM,EAAA,EAAMS,KAAP,KAAaV,EAAMW,OAASX,EAAMW,OAAOC,WAAa,IACtD,kBAACX,EAAA,EAAMY,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASf,EAAMI,QAAvB,W,oCChBKY,EAAb,4MACEC,MAAQ,CAAEC,MAAO,KAAMC,UAAU,EAAOC,MAAO,IAAKC,OAAQ,KAD9D,EAmCEC,UAAY,SAACC,GACP,EAAKvB,MAAMsB,WAAW,EAAKtB,MAAMsB,UAAUC,GAC/C,EAAKC,aACL,EAAKC,sBAtCT,EAyCEC,UAAY,WACV,IAAIR,EAAQ,EAAKD,MAAMC,MACvBA,EAAMS,UAAUC,MAAQ,EAAI,EAAIC,KAAKC,SAErC,EAAKC,SAAS,CAAEb,QAAOC,UAAU,IAAQ,kBACvC,EAAKF,MAAMC,MAAMc,qBA9CvB,EAkDER,WAAa,WACX,EAAKP,MAAMC,MAAMe,eAAc,GAC/B,IAAIf,EAAQ,EAAKD,MAAMC,MACvBA,EAAMgB,cAAgBhB,EAAMgB,cAAgB,IAC5C,EAAKH,SAAS,CAAEb,QAAOC,UAAU,IAAS,WACxC,EAAKF,MAAMC,MAAMiB,OACjB,EAAKV,yBAxDX,EA4DEA,mBAAqB,WAEnB,IAAIW,EAAM,EAAKnB,MAAMC,MAAMkB,IAE3BA,EAAIC,YAAc,OAClBD,EAAIE,UAAY,OAChBF,EAAIG,UAAY,EAChB,IAAInB,EAAQgB,EAAII,OAAOpB,MAAQ,EAC3BC,EAA6B,IAApBe,EAAII,OAAOnB,OACxBe,EAAIK,YACJL,EAAIM,OAAOtB,EAAQC,EAAQ,GAC3Be,EAAIO,OAAOvB,EAAQC,EAAQ,GAC3Be,EAAIO,OAAOvB,EAAOC,GAClBe,EAAIO,OAAOvB,EAAQC,EAAQ,GAC3Be,EAAIQ,SACJR,EAAIS,QA3ER,EA8EEC,uBAAyB,WACvB,IAAIC,EAAQlB,KAAKmB,IAAIC,OAAOC,WAAYD,OAAOE,YAAa,KAC5D,EAAKpB,SAAS,CAAEX,MAAO2B,EAAO1B,OAAQ0B,IAAS,WACzC,EAAK9B,MAAMC,OACbkC,YAAW,WACT,EAAKnC,MAAMC,MAAMiB,OACjB,EAAKV,uBACJ,OArFX,kEAGuB,IAAD,OACV4B,EAAaC,KAAKtD,MAAlBqD,SAERC,KAAKR,yBACLG,OAAOM,iBAAiB,SAAUD,KAAKR,wBACf,MAApBQ,KAAKrC,MAAMC,OACboC,KAAKvB,SACH,CACEb,MAAO,IAAI+B,OAAOO,SAAS,CACzBC,SAAU,cACVC,YAAY,EACZC,UAAU,EACVC,YAAaP,EAASQ,OACtBR,SAAUA,EACV1B,UAAW,CACTmC,KAAM,aACNC,iBAAkBT,KAAKhC,UACvB0C,cAAeV,KAAK7B,wBAI1B,WACE,EAAKR,MAAMC,MAAMiB,OACjBiB,WAAW,EAAK3B,mBAAoB,QA1B9C,6CAgCIwB,OAAOgB,oBAAoB,SAAUX,KAAKR,0BAhC9C,+BA2FI,OACE,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKtE,UAAU,qCACb,4BACEF,GAAG,cACHyB,MAAOkC,KAAKrC,MAAMG,MAClBC,OAAQiC,KAAKrC,MAAMI,UAIvB,kBAAC+C,EAAA,EAAD,CAAKvE,UAAU,0BACb,kBAACiB,EAAA,EAAD,CAAQuD,SAAUf,KAAKrC,MAAME,SAAUJ,QAASuC,KAAK5B,WAArD,kBAvGZ,GAA2B4C,aCW3B,SAASC,IAGP,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHY,mBAGK3C,KAAK6C,MAAsB,GAAhB7C,KAAKC,WAEnC,OAAO0C,EAGF,SAASG,IAAQ,IAjBFC,EAiBC,EACaC,IAAMC,UAAS,GAD5B,mBACdC,EADc,KACHC,EADG,OAEOH,IAAMC,SAAS,MAFtB,mBAEdnE,EAFc,KAENsE,EAFM,KAGrB,OACE,oCACE,kBAAC,EAAD,MACA,kBAACf,EAAA,EAAD,CAAWgB,OAAK,GACd,kBAACd,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAAC,EAAD,CACEd,UA3BQuB,EA2Be,EA1B5B,IAAIO,MAAMP,GAAY/B,KAAK,GAAGuC,KAAI,SAACC,EAAKC,GAAN,MAAiB,CACxDhD,UAAWiC,IACXgB,KAAK,GAAD,OAAKD,GACTE,gBAAiBZ,EAAa,EAAI,aAAe,cAwBvCtD,UAAW,SAACmE,GACVT,GAAa,GACbC,EAAUQ,OAIhB,kBAAC1F,EAAD,CACEG,KAAM6E,EACN3E,OAAQ,kBAAM4E,GAAa,IAC3BrE,OAAQA,O,oBCxCL,SAAS+E,IACtB,OACE,oCACE,kBAAC,EAAD,MACA,wCCJS,SAASC,IACtB,OACE,oCACE,kBAAC,EAAD,MACA,0CCYSC,MAbf,WACE,OACE,kBAAC,gBAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,kBAAkBC,UAAWnB,IACzC,kBAAC,IAAD,CAAOkB,KAAK,oBAAoBC,UAAWJ,IAC3C,kBAAC,IAAD,CAAOG,KAAK,sBAAsBC,UAAWH,IAC7C,kBAAC,IAAD,CAAUI,KAAK,IAAIzG,GAAG,uB,MCR9B0G,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d3051e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar as BSNavbar, Nav, NavbarBrand } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\r\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <BSNavbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <LinkContainer to=\"home\">\r\n        <NavbarBrand>MealWheel</NavbarBrand>\r\n      </LinkContainer>\r\n      <NavbarToggle aria-controls=\"basic-navbar-nav\" />\r\n      <NavbarCollapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to=\"dinein\">\r\n            <Nav.Link>Dine In</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"carryout\">\r\n            <Nav.Link>Carry Out</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </NavbarCollapse>\r\n    </BSNavbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nexport default function WinnerModal(props) {\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      size=\"lg\"\r\n      onHide={props.onHide}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton onHide={props.onHide}>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.winner ? props.winner.toString() : \"\"}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\n\r\nexport class Wheel extends Component {\r\n  state = { wheel: null, spinning: false, width: 500, height: 500 };\r\n\r\n  componentDidMount() {\r\n    const { segments } = this.props;\r\n\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    if (this.state.wheel == null)\r\n      this.setState(\r\n        {\r\n          wheel: new window.Winwheel({\r\n            canvasId: \"wheelCanvas\",\r\n            responsive: true,\r\n            drawText: true,\r\n            numSegments: segments.length,\r\n            segments: segments,\r\n            animation: {\r\n              type: \"spinToStop\",\r\n              callbackFinished: this.onSpinEnd,\r\n              callbackAfter: this.drawColourTriangle,\r\n            },\r\n          }),\r\n        },\r\n        () => {\r\n          this.state.wheel.draw();\r\n          setTimeout(this.drawColourTriangle, 1);\r\n        }\r\n      );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  onSpinEnd = (selectedSegment) => {\r\n    if (this.props.onSpinEnd) this.props.onSpinEnd(selectedSegment);\r\n    this.resetWheel();\r\n    this.drawColourTriangle();\r\n  };\r\n\r\n  spinWheel = () => {\r\n    let wheel = this.state.wheel;\r\n    wheel.animation.spins = 8 + 1 * Math.random();\r\n\r\n    this.setState({ wheel, spinning: true }, () =>\r\n      this.state.wheel.startAnimation()\r\n    );\r\n  };\r\n\r\n  resetWheel = () => {\r\n    this.state.wheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\r\n    let wheel = this.state.wheel;\r\n    wheel.rotationAngle = wheel.rotationAngle % 360; // Re-set the wheel angle to 0 degrees.\r\n    this.setState({ wheel, spinning: false }, () => {\r\n      this.state.wheel.draw();\r\n      this.drawColourTriangle();\r\n    });\r\n  };\r\n\r\n  drawColourTriangle = () => {\r\n    // Get context used by the wheel.\r\n    let ctx = this.state.wheel.ctx;\r\n\r\n    ctx.strokeStyle = \"navy\"; // Set line colour.\r\n    ctx.fillStyle = \"aqua\"; // Set fill colour.\r\n    ctx.lineWidth = 2;\r\n    let width = ctx.canvas.width / 2;\r\n    let height = ctx.canvas.height * 0.05;\r\n    ctx.beginPath(); // Begin path.\r\n    ctx.moveTo(width - height, 1); // Move to initial position.\r\n    ctx.lineTo(width + height, 1); // Draw lines to make the shape.\r\n    ctx.lineTo(width, height);\r\n    ctx.lineTo(width - height, 1);\r\n    ctx.stroke(); // Complete the path by stroking (draw lines).\r\n    ctx.fill(); // Then fill.\r\n  };\r\n\r\n  updateWindowDimensions = () => {\r\n    let dimen = Math.min(window.innerWidth, window.innerHeight, 500);\r\n    this.setState({ width: dimen, height: dimen }, () => {\r\n      if (this.state.wheel) {\r\n        setTimeout(() => {\r\n          this.state.wheel.draw();\r\n          this.drawColourTriangle();\r\n        }, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Col>\r\n          <div className=\"d-flex p-4 justify-content-center\">\r\n            <canvas\r\n              id=\"wheelCanvas\"\r\n              width={this.state.width}\r\n              height={this.state.height}\r\n            />\r\n          </div>\r\n\r\n          <Row className=\"justify-content-around\">\r\n            <Button disabled={this.state.spinning} onClick={this.spinWheel}>\r\n              Spin Me\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport WinnerModal from \"../components/WinnerModal\";\r\nimport { Wheel } from \"../components/Wheel\";\r\n\r\nfunction getWheelData(numEntries) {\r\n  return new Array(numEntries).fill(0).map((val, index) => ({\r\n    fillStyle: getRandomColor(),\r\n    text: `${index}`,\r\n    textOrientation: numEntries > 6 ? \"horizontal\" : \"curved\",\r\n  }));\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = \"0123456789ABCDEF\";\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport function Home() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [winner, setWinner] = React.useState(null);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Wheel\r\n              segments={getWheelData(5)}\r\n              onSpinEnd={(segment) => {\r\n                setModalShow(true);\r\n                setWinner(segment);\r\n              }}\r\n            />\r\n          </Col>\r\n          <WinnerModal\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n            winner={winner}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport default function DineIn() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>DineIn</div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport default function CarryOut() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>CarryOut</div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport DineIn from \"./pages/DineIn\";\nimport CarryOut from \"./pages/CarryOut\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/MealWheel/home\" component={Home} />\n        <Route path=\"/MealWheel/dinein\" component={DineIn} />\n        <Route path=\"/MealWheel/carryout\" component={CarryOut} />\n        <Redirect from=\"/\" to=\"/MealWheel/home\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}