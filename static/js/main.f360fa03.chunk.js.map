{"version":3,"sources":["components/Navbar.js","pages/Home.js","pages/DineIn.js","components/Wheel.js","components/WinnerModal.js","pages/CarryOut.js","App.js","index.js"],"names":["Navbar","bg","variant","expand","to","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","className","Link","Home","DineIn","Wheel","state","wheel","spinning","onSpinEnd","selectedSegment","props","resetWheel","draw","drawColourTriangle","spinWheel","animation","spins","Math","random","setState","startAnimation","stopAnimation","rotationAngle","ctx","canvas","getContext","scaleFactor","console","log","strokeStyle","fillStyle","lineWidth","width","height","beginPath","moveTo","lineTo","stroke","fill","segments","this","window","Winwheel","canvasId","responsive","drawText","numSegments","length","type","callbackFinished","callbackAfter","clearTheCanvas","setTimeout","Container","Col","data-responsivescaleheight","Row","Button","disabled","onClick","Component","WinnerModal","Modal","show","size","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","winner","toString","Footer","getRandomColor","color","i","floor","CarryOut","numEntries","React","useState","modalShow","setModalShow","setWinner","fluid","Array","map","val","index","text","textOrientation","segment","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f360fa03.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar as BSNavbar, Nav, NavbarBrand } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\r\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <BSNavbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <LinkContainer to=\"home\">\r\n        <NavbarBrand>MealWheel</NavbarBrand>\r\n      </LinkContainer>\r\n      <NavbarToggle aria-controls=\"basic-navbar-nav\" />\r\n      <NavbarCollapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to=\"dinein\">\r\n            <Nav.Link>Dine In</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"carryout\">\r\n            <Nav.Link>Carry Out</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </NavbarCollapse>\r\n    </BSNavbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>Home</div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport default function DineIn() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>DineIn</div>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\n\r\nexport class Wheel extends Component {\r\n  state = { wheel: null, spinning: false };\r\n\r\n  componentDidMount() {\r\n    const { segments } = this.props;\r\n\r\n    if (this.state.wheel == null) {\r\n      let wheel = new window.Winwheel({\r\n        canvasId: \"wheelCanvas\",\r\n        responsive: true,\r\n        drawText: true,\r\n        numSegments: segments.length,\r\n        segments: segments,\r\n        animation: {\r\n          type: \"spinToStop\",\r\n          callbackFinished: this.onSpinEnd,\r\n          callbackAfter: this.drawColourTriangle,\r\n        },\r\n        clearTheCanvas: false,\r\n      });\r\n\r\n      this.setState(\r\n        {\r\n          wheel,\r\n        },\r\n        () => {\r\n          this.state.wheel.draw();\r\n          setTimeout(this.drawColourTriangle, 1);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.wheel.stopAnimation(false);\r\n  }\r\n\r\n  onSpinEnd = (selectedSegment) => {\r\n    if (this.props.onSpinEnd) this.props.onSpinEnd(selectedSegment);\r\n    this.resetWheel();\r\n    this.state.wheel.draw();\r\n    this.drawColourTriangle();\r\n  };\r\n\r\n  spinWheel = () => {\r\n    let wheel = this.state.wheel;\r\n    wheel.animation.spins = 8 + 1 * Math.random();\r\n\r\n    this.setState({ wheel, spinning: true }, () =>\r\n      this.state.wheel.startAnimation()\r\n    );\r\n  };\r\n\r\n  resetWheel = () => {\r\n    this.state.wheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\r\n    let wheel = this.state.wheel;\r\n    wheel.rotationAngle = wheel.rotationAngle % 360; // Re-set the wheel angle to 0 degrees.\r\n    this.setState({ wheel, spinning: false }, () => {\r\n      this.state.wheel.draw();\r\n      this.drawColourTriangle();\r\n    });\r\n  };\r\n\r\n  drawColourTriangle = () => {\r\n    // Get context used by the wheel.\r\n    // let ctx = this.state.wheel.ctx;\r\n    let ctx = this.state.wheel.canvas.getContext(\"2d\");\r\n    let scaleFactor = this.state.wheel.scaleFactor;\r\n    console.log(this.state.wheel.scaleFactor);\r\n\r\n    ctx.strokeStyle = \"navy\"; // Set line colour.\r\n    ctx.fillStyle = \"aqua\"; // Set fill colour.\r\n    ctx.lineWidth = 2;\r\n    let width = ctx.canvas.width / 2;\r\n    let height = ctx.canvas.height * 0.05;\r\n    ctx.beginPath(); // Begin path.\r\n    ctx.moveTo(width - height * scaleFactor, 1); // Move to initial position.\r\n    ctx.lineTo(width + height * scaleFactor, 1); // Draw lines to make the shape.\r\n    ctx.lineTo(width, height * scaleFactor);\r\n    ctx.lineTo(width - height * scaleFactor, 1);\r\n    ctx.stroke(); // Complete the path by stroking (draw lines).\r\n    ctx.fill(); // Then fill.\r\n  };\r\n\r\n  render() {\r\n    if (this.state.wheel) this.drawColourTriangle();\r\n    return (\r\n      <Container>\r\n        <Col>\r\n          <div className=\"d-flex p-4 justify-content-center\">\r\n            <canvas\r\n              id=\"wheelCanvas\"\r\n              width={500}\r\n              height={500}\r\n              data-responsivescaleheight=\"true\"\r\n            />\r\n          </div>\r\n\r\n          <Row className=\"justify-content-around\">\r\n            <Button disabled={this.state.spinning} onClick={this.spinWheel}>\r\n              Spin Me\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nexport default function WinnerModal(props) {\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      size=\"lg\"\r\n      onHide={props.onHide}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton onHide={props.onHide}>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.winner ? props.winner.toString() : \"\"}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Wheel } from \"../components/Wheel\";\r\nimport WinnerModal from \"../components/WinnerModal\";\r\n\r\nfunction getWheelData(numEntries) {\r\n  return new Array(numEntries).fill(0).map((val, index) => ({\r\n    fillStyle: getRandomColor(),\r\n    text: `${index}`,\r\n    textOrientation: numEntries > 6 ? \"horizontal\" : \"curved\",\r\n  }));\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = \"0123456789ABCDEF\";\r\n  var color = \"#\";\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nexport default function CarryOut() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [winner, setWinner] = React.useState(null);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Wheel\r\n              segments={getWheelData(5)}\r\n              onSpinEnd={(segment) => {\r\n                setModalShow(true);\r\n                setWinner(segment);\r\n              }}\r\n            />\r\n          </Col>\r\n          <WinnerModal\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n            winner={winner}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport DineIn from \"./pages/DineIn\";\nimport CarryOut from \"./pages/CarryOut\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/MealWheel/home\" component={Home} />\n        <Route path=\"/MealWheel/dinein\" component={DineIn} />\n        <Route path=\"/MealWheel/carryout\" component={CarryOut} />\n        <Redirect from=\"/\" to=\"/MealWheel/home\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}