{"version":3,"sources":["components/Navbar.js","pages/Home.js","pages/DineIn.js","components/Wheel.js","components/WinnerModal.js","pages/CarryOut.js","App.js","index.js"],"names":["Navbar","bg","variant","expand","to","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","Nav","className","Link","Home","DineIn","Wheel","state","wheel","spinning","onSpinEnd","selectedSegment","props","resetWheel","draw","drawColourTriangle","spinWheel","animation","spins","Math","random","setState","startAnimation","stopAnimation","rotationAngle","ctx","canvas","getContext","scaleFactor","strokeStyle","fillStyle","lineWidth","width","height","beginPath","moveTo","lineTo","stroke","fill","segments","this","window","Winwheel","canvasId","responsive","drawText","numSegments","length","type","callbackFinished","callbackAfter","clearTheCanvas","setTimeout","Container","Col","data-responsivescaleheight","Row","Button","disabled","onClick","Component","WinnerModal","onHide","show","winner","query","location","replace","Modal","size","aria-labelledby","centered","ModalHeader","closeButton","ModalTitle","name","ModalBody","Image","src","rounded","target","rel","href","ModalFooter","CarryOut","React","useState","modalShow","setModalShow","setWinner","fluid","restaurants","filter","entry","map","restaurant","bgColor","text","textFillStyle","fontColor","textOrientation","data","segment","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c15bcc5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar as BSNavbar, Nav, NavbarBrand } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\r\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <BSNavbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <LinkContainer to=\"home\">\r\n        <NavbarBrand>MealWheel</NavbarBrand>\r\n      </LinkContainer>\r\n      <NavbarToggle aria-controls=\"basic-navbar-nav\" />\r\n      <NavbarCollapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to=\"dinein\">\r\n            <Nav.Link>Dine In</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"carryout\">\r\n            <Nav.Link>Carry Out</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </NavbarCollapse>\r\n    </BSNavbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>Home</div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nexport default function DineIn() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>DineIn</div>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\r\n\r\nexport class Wheel extends Component {\r\n  state = { wheel: null, spinning: false };\r\n\r\n  componentDidMount() {\r\n    const { segments } = this.props;\r\n\r\n    if (this.state.wheel == null) {\r\n      let wheel = new window.Winwheel({\r\n        canvasId: \"wheelCanvas\",\r\n        responsive: true,\r\n        drawText: true,\r\n        numSegments: segments.length,\r\n        segments: segments,\r\n        animation: {\r\n          type: \"spinToStop\",\r\n          callbackFinished: this.onSpinEnd,\r\n          callbackAfter: this.drawColourTriangle,\r\n        },\r\n        clearTheCanvas: false,\r\n      });\r\n\r\n      this.setState(\r\n        {\r\n          wheel,\r\n        },\r\n        () => {\r\n          this.state.wheel.draw();\r\n          setTimeout(this.drawColourTriangle, 1);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.state.wheel.stopAnimation(false);\r\n  }\r\n\r\n  onSpinEnd = (selectedSegment) => {\r\n    if (this.props.onSpinEnd) this.props.onSpinEnd(selectedSegment);\r\n    this.resetWheel();\r\n    this.state.wheel.draw();\r\n    this.drawColourTriangle();\r\n  };\r\n\r\n  spinWheel = () => {\r\n    let wheel = this.state.wheel;\r\n    wheel.animation.spins = 8 + 1 * Math.random();\r\n\r\n    this.setState({ wheel, spinning: true }, () =>\r\n      this.state.wheel.startAnimation()\r\n    );\r\n  };\r\n\r\n  resetWheel = () => {\r\n    this.state.wheel.stopAnimation(false); // Stop the animation, false as param so does not call callback function.\r\n    let wheel = this.state.wheel;\r\n    wheel.rotationAngle = wheel.rotationAngle % 360; // Re-set the wheel angle to 0 degrees.\r\n    this.setState({ wheel, spinning: false }, () => {\r\n      this.state.wheel.draw();\r\n      this.drawColourTriangle();\r\n    });\r\n  };\r\n\r\n  drawColourTriangle = () => {\r\n    // Get context used by the wheel.\r\n    // let ctx = this.state.wheel.ctx;\r\n    let ctx = this.state.wheel.canvas.getContext(\"2d\");\r\n    let scaleFactor = this.state.wheel.scaleFactor;\r\n\r\n    ctx.strokeStyle = \"black\"; // Set line colour.\r\n    ctx.fillStyle = \"red\"; // Set fill colour.\r\n    ctx.lineWidth = 3;\r\n    let width = ctx.canvas.width / 2;\r\n    let height = ctx.canvas.height * 0.05;\r\n    ctx.beginPath(); // Begin path.\r\n    ctx.moveTo(width - height * scaleFactor, 1); // Move to initial position.\r\n    ctx.lineTo(width + height * scaleFactor, 1); // Draw lines to make the shape.\r\n    ctx.lineTo(width, height * scaleFactor);\r\n    ctx.lineTo(width - height * scaleFactor, 1);\r\n    ctx.stroke(); // Complete the path by stroking (draw lines).\r\n    ctx.fill(); // Then fill.\r\n  };\r\n\r\n  render() {\r\n    if (this.state.wheel) this.drawColourTriangle();\r\n    return (\r\n      <Container>\r\n        <Col>\r\n          <div className=\"d-flex p-4 justify-content-center\">\r\n            <canvas\r\n              id=\"wheelCanvas\"\r\n              width={500}\r\n              height={500}\r\n              data-responsivescaleheight=\"true\"\r\n            />\r\n          </div>\r\n\r\n          <Row className=\"justify-content-around\">\r\n            <Button disabled={this.state.spinning} onClick={this.spinWheel}>\r\n              Spin Me\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ModalTitle,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Col,\r\n  Container,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\n\r\nexport default function WinnerModal({ onHide, show, winner }) {\r\n  if (!winner) return null;\r\n  let link = \"https://www.google.com/maps/dir/?api=1&\";\r\n  let query =\r\n    \"travelmode=driving&destination=\" +\r\n    winner.location.replace(\" \", \"+\").replace(\",\", \"%2C\");\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      size=\"lg\"\r\n      onHide={onHide}\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <ModalHeader closeButton onHide={onHide}>\r\n        <ModalTitle id=\"contained-modal-title-vcenter\">\r\n          {winner.name} was Picked!\r\n        </ModalTitle>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Container>\r\n          <Col className=\"justify-content-end text-center\">\r\n            <Image src=\"https://via.placeholder.com/350\" rounded />\r\n            <h1>{winner.name}</h1>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={link + query}>\r\n              <Button>Get Directions</Button>\r\n            </a>\r\n          </Col>\r\n        </Container>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button onClick={onHide}>Close</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Wheel } from \"../components/Wheel\";\r\nimport WinnerModal from \"../components/WinnerModal\";\r\nimport restaurants from \"../data/restaurants.json\";\r\n\r\nfunction getWheelData() {\r\n  return restaurants\r\n    .filter((entry) => entry.type === \"take_out\")\r\n    .map((restaurant) => ({\r\n      fillStyle: restaurant.bgColor,\r\n      text: restaurant.name,\r\n      textFillStyle: restaurant.fontColor,\r\n      textOrientation: \"horizontal\",\r\n      data: restaurant,\r\n    }));\r\n}\r\n\r\nexport default function CarryOut() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const [winner, setWinner] = React.useState(null);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Wheel\r\n              segments={getWheelData()}\r\n              onSpinEnd={(segment) => {\r\n                setWinner(segment.data);\r\n\r\n                setModalShow(true);\r\n              }}\r\n            />\r\n          </Col>\r\n          <WinnerModal\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n            winner={winner}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Home } from \"./pages/Home\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport DineIn from \"./pages/DineIn\";\nimport CarryOut from \"./pages/CarryOut\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/MealWheel/home\" component={Home} />\n        <Route path=\"/MealWheel/dinein\" component={DineIn} />\n        <Route path=\"/MealWheel/carryout\" component={CarryOut} />\n        <Route\n          path=\"/privacy-policy\"\n          component={() => {\n            window.location.href = \"https://example.com/1234\";\n            return null;\n          }}\n        />\n        <Redirect from=\"/\" to=\"/MealWheel/home\" />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}